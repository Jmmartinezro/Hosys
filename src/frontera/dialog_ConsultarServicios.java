/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * dialog_ConsultarServicios.java
 *
 * Created on 5/11/2011, 02:24:14 PM
 */
package frontera;

import control.AdministrarReserva;
import java.util.ArrayList;
import entidad.Habitacion;
import control.BusquedaDeHabitaciones;
import entidad.Servicio;
import javax.swing.table.DefaultTableModel;
import control.AdministrarServicio;
import entidad.MiniBar;
import entidad.ObjetoMiniBar;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.util.List;

/**
 *
 * @author user
 */
public class dialog_ConsultarServicios extends javax.swing.JDialog {

    /** Creates new form dialog_ConsultarServicios */
    public dialog_ConsultarServicios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        llenarHabitacionesOcupadas();
        jPanel_Detalles.setVisible(false);
        Dimension dim = new Dimension(450, 410);
        setSize(dim);
        label_ConsultarServicio.requestFocusInWindow();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_NumerodeHabitacion = new javax.swing.JLabel();
        comboBox_HabitacionOcupada = new javax.swing.JComboBox();
        scrollPanel_ListadoServicio = new javax.swing.JScrollPane();
        table_ListadoServicio = new javax.swing.JTable();
        button_AceptarConsultarServicio = new javax.swing.JButton();
        label_ConsultarServicio = new javax.swing.JLabel();
        jPanel_Detalles = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_ListadoObjetos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        label_NumerodeHabitacion.setText("Número de Habitación");

        comboBox_HabitacionOcupada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox_HabitacionOcupadaActionPerformed(evt);
            }
        });
        comboBox_HabitacionOcupada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                comboBox_HabitacionOcupadaKeyReleased(evt);
            }
        });

        table_ListadoServicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Servicio", "Fecha", "Cantidad", "Valor Unitario", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_ListadoServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_ListadoServicioMouseClicked(evt);
            }
        });
        table_ListadoServicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_ListadoServicioKeyReleased(evt);
            }
        });
        scrollPanel_ListadoServicio.setViewportView(table_ListadoServicio);
        table_ListadoServicio.getColumnModel().getColumn(0).setPreferredWidth(30);

        button_AceptarConsultarServicio.setText("Aceptar");
        button_AceptarConsultarServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_AceptarConsultarServicioActionPerformed(evt);
            }
        });

        label_ConsultarServicio.setFont(new java.awt.Font("Tahoma", 1, 36));
        label_ConsultarServicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontera/imagenes/iconos/l/shopping_cart.png"))); // NOI18N
        label_ConsultarServicio.setText("<Html>Consultar <Br>Servicio</Html>");
        label_ConsultarServicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                label_ConsultarServicioKeyReleased(evt);
            }
        });

        jPanel_Detalles.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles"));

        table_ListadoObjetos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Objeto", "Cantidad", "Valor Unitario", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_ListadoObjetos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_ListadoObjetosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_ListadoObjetos);

        javax.swing.GroupLayout jPanel_DetallesLayout = new javax.swing.GroupLayout(jPanel_Detalles);
        jPanel_Detalles.setLayout(jPanel_DetallesLayout);
        jPanel_DetallesLayout.setHorizontalGroup(
            jPanel_DetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_DetallesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_DetallesLayout.setVerticalGroup(
            jPanel_DetallesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_DetallesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_ConsultarServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(label_NumerodeHabitacion)
                                        .addGap(16, 16, 16)
                                        .addComponent(comboBox_HabitacionOcupada, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(scrollPanel_ListadoServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel_Detalles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(button_AceptarConsultarServicio)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(label_ConsultarServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label_NumerodeHabitacion)
                            .addComponent(comboBox_HabitacionOcupada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(scrollPanel_ListadoServicio, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                    .addComponent(jPanel_Detalles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(button_AceptarConsultarServicio)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_AceptarConsultarServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_AceptarConsultarServicioActionPerformed
        //parent.cambiarPanel(new panel_Opciones(parent));
        dispose();
    }//GEN-LAST:event_button_AceptarConsultarServicioActionPerformed

    private void comboBox_HabitacionOcupadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox_HabitacionOcupadaActionPerformed
        llenarTablaServicios();
    }//GEN-LAST:event_comboBox_HabitacionOcupadaActionPerformed

    private void table_ListadoServicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_ListadoServicioMouseClicked
        int fila = table_ListadoServicio.rowAtPoint(evt.getPoint());
        Servicio s = new AdministrarServicio().buscarServicio(
                new AdministrarReserva().ConsultarReserva(new BusquedaDeHabitaciones().consultarHabitacion(Integer.parseInt(comboBox_HabitacionOcupada.getSelectedItem().toString())).getCodigoReservaActiva(), true).getHuesped().getFactura().getServicio(),
                (Long) table_ListadoServicio.getValueAt(fila, 0));

        if (s.getClass().getName().equals("entidad.MiniBar")) {
            jPanel_Detalles.setVisible(true);
            Dimension dim = new Dimension(814, 410);
            setSize(dim);
            llenarTablaObjetos((MiniBar) s);
        } else {
            jPanel_Detalles.setVisible(false);
            Dimension dim = new Dimension(450, 410);
            setSize(dim);
        }
    }//GEN-LAST:event_table_ListadoServicioMouseClicked

    private void label_ConsultarServicioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_label_ConsultarServicioKeyReleased
        presionarESC(evt);
    }//GEN-LAST:event_label_ConsultarServicioKeyReleased

    private void comboBox_HabitacionOcupadaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboBox_HabitacionOcupadaKeyReleased
        presionarESC(evt);
    }//GEN-LAST:event_comboBox_HabitacionOcupadaKeyReleased

    private void table_ListadoServicioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_ListadoServicioKeyReleased
        presionarESC(evt);
    }//GEN-LAST:event_table_ListadoServicioKeyReleased

    private void table_ListadoObjetosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_ListadoObjetosKeyReleased
        presionarESC(evt);
    }//GEN-LAST:event_table_ListadoObjetosKeyReleased

    private void presionarESC(KeyEvent e){
        if(e.getKeyCode() == KeyEvent.VK_ESCAPE){
            this.dispose();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_AceptarConsultarServicio;
    private javax.swing.JComboBox comboBox_HabitacionOcupada;
    private javax.swing.JPanel jPanel_Detalles;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_ConsultarServicio;
    private javax.swing.JLabel label_NumerodeHabitacion;
    private javax.swing.JScrollPane scrollPanel_ListadoServicio;
    private javax.swing.JTable table_ListadoObjetos;
    private javax.swing.JTable table_ListadoServicio;
    // End of variables declaration//GEN-END:variables

    private void llenarHabitacionesOcupadas() {
        comboBox_HabitacionOcupada.removeAllItems();
        //comboBox_HabitacionOcupada.addItem("Habitaciones");
        ArrayList<Habitacion> habitacionesOcupadas = new BusquedaDeHabitaciones().habitacionesOcupadas();
        if (!habitacionesOcupadas.isEmpty()) {
            for (Habitacion h : habitacionesOcupadas) {
                comboBox_HabitacionOcupada.addItem(h.getIdHabitacion());
            }
            comboBox_HabitacionOcupada.setEnabled(true);
            button_AceptarConsultarServicio.setEnabled(true);
        } else {
            comboBox_HabitacionOcupada.setEnabled(false);
            button_AceptarConsultarServicio.setEnabled(false);
        }
    }

    private void llenarTablaServicios() {
        //ArrayList<Servicio> servicios = controlHab.consultarHabitacion(Integer.parseInt(comboBox_HabitacionOcupada.getSelectedItem().toString())).getReservaActiva().getHuesped().getFactura().getServicio();
        List<Servicio> servicios = new AdministrarReserva().ConsultarReserva(new BusquedaDeHabitaciones().consultarHabitacion(Integer.parseInt(comboBox_HabitacionOcupada.getSelectedItem().toString())).getCodigoReservaActiva(), true).getHuesped().getFactura().getServicio();
        DefaultTableModel modelo = (DefaultTableModel) table_ListadoServicio.getModel();
        int a = modelo.getRowCount() - 1;
        for (int i = 0; i <= a; i++) {
            modelo.removeRow(0);
        }
        Object[] row = new Object[6];
        for (Servicio s : servicios) {
            row[0] = s.getIdServicio();
            row[1] = s.getNombre();
            row[2] = s.getFecha().toString();
            row[3] = s.getCantidad();
            if (s.getClass().getName().equals("entidad.MiniBar")) {
                row[4] = "Ver";
            } else {
                row[4] = s.getCosto();
            }
            row[5] = s.getCostoTotal();
            modelo.addRow(row);
        }
    }

    private void llenarTablaObjetos(MiniBar miniBar) {
        DefaultTableModel modelo = (DefaultTableModel) table_ListadoObjetos.getModel();
        int a = modelo.getRowCount() - 1;
        for (int i = 0; i <= a; i++) {
            modelo.removeRow(0);
        }
        Object[] fila = new Object[4];
        for (ObjetoMiniBar omb : miniBar.getObjetosMinibar()) {
            fila[0] = omb.getNombre();
            fila[1] = omb.getCantidad();
            fila[2] = omb.getCosto();
            fila[3] = omb.getCostoTotal();
            modelo.addRow(fila);
        }
    }
}
